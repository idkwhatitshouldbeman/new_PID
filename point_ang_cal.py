import numpy as np
import matplotlib.pyplot as plt

# Input data
input_data = '''
-161.885,-0.488,120,0
-160.146,-2.339,120
-158.406,-4.19,120
-156.666,-6.041,120
-154.927,-7.891,120
-153.187,-9.742,120
-151.447,-11.593,120
-149.708,-13.443,120
-147.968,-15.294,120
-146.228,-17.145,120
-144.489,-18.996,120
-142.749,-20.846,120
-141.009,-22.697,120
-139.27,-24.548,120
-137.53,-26.398,120
-135.79,-28.249,120
-134.051,-30.1,120
-132.311,-31.951,120
-130.571,-33.801,120
-128.832,-35.652,120
-127.092,-37.503,120
-125.352,-39.353,120
-123.613,-41.204,120
-121.873,-43.055,120
-120.133,-44.906,120
-117.954,-45.887,120,0
-115.432,-46.188,120
-112.91,-46.489,120
-110.388,-46.79,120
-107.866,-47.091,120
-105.344,-47.393,120
-102.822,-47.694,120
-100.3,-47.995,120
-97.778,-48.296,120
-95.256,-48.597,120
-92.734,-48.898,120
-90.212,-49.199,120
-87.689,-49.501,120
-85.167,-49.802,120
-82.645,-50.103,120
-80.123,-50.404,120
-77.601,-50.705,120
-75.079,-51.006,120
-72.557,-51.308,120
-70.035,-51.609,120
-67.513,-51.91,120
-64.991,-52.211,120
-62.469,-52.512,120
-59.947,-52.813,120
-57.587,-53.613,120,0
-55.371,-54.855,120
-53.156,-56.098,120
-50.94,-57.34,120
-48.725,-58.582,120
-46.509,-59.824,120
-44.293,-61.066,120
-42.078,-62.308,120
-39.862,-63.55,120
-37.647,-64.792,120
-35.431,-66.034,120
-33.215,-67.276,120
-31,-68.518,120
-28.784,-69.76,120
-26.569,-71.002,120
-24.353,-72.245,120
-22.138,-73.487,120
-19.922,-74.729,120
-17.706,-75.971,120
-15.491,-77.213,120
-13.275,-78.455,120
-11.06,-79.697,120
-8.844,-80.939,120
-6.628,-82.181,120
-4.413,-83.423,120
-2.197,-84.665,120
0.018,-85.907,120
2.234,-87.149,120
4.45,-88.392,120
6.665,-89.634,120
8.881,-90.876,120
11.096,-92.118,120
13.312,-93.36,120
15.528,-94.602,120
17.743,-95.844,120
19.959,-97.086,120
22.174,-98.328,120
24.39,-99.57,120
26.606,-100.812,120
28.821,-102.054,120
31.037,-103.296,120
33.252,-104.538,120
35.468,-105.781,120
37.683,-107.023,120
39.899,-108.265,120
42.115,-109.507,120
44.33,-110.749,120
46.546,-111.991,120
48.761,-113.233,120
50.977,-114.475,120
53.193,-115.717,120
55.408,-116.959,120
57.624,-118.201,120
59.839,-119.443,120,0
60.581,-118.277,120
60.481,-115.739,120
60.382,-113.201,120
60.283,-110.663,120
60.184,-108.125,120
60.085,-105.587,120
59.986,-103.049,120
59.886,-100.511,120
59.787,-97.973,120
59.688,-95.435,120
59.589,-92.897,120
59.49,-90.359,120
59.391,-87.821,120
59.292,-85.283,120
59.192,-82.745,120
59.093,-80.207,120
58.994,-77.668,120
58.895,-75.13,120
58.796,-72.592,120
58.697,-70.054,120
58.598,-67.516,120
58.498,-64.978,120
58.399,-62.44,120,0
56.908,-60.504,120
55.126,-58.695,120
53.343,-56.885,120
51.561,-55.076,120
49.779,-53.266,120
47.996,-51.457,120
46.214,-49.647,120
44.431,-47.838,120
42.649,-46.028,120
40.866,-44.219,120
39.084,-42.409,120
37.301,-40.599,120
35.519,-38.79,120
33.736,-36.98,120
31.954,-35.171,120
30.171,-33.361,120
28.389,-31.552,120
26.607,-29.742,120
24.824,-27.933,120
23.042,-26.123,120
21.259,-24.314,120
19.477,-22.504,120
17.694,-20.695,120
15.912,-18.885,120
14.129,-17.075,120
12.347,-15.266,120
10.564,-13.456,120
8.782,-11.647,120
6.999,-9.837,120
5.217,-8.028,120
3.435,-6.218,120
1.652,-4.409,120
-0.13,-2.599,120
-1.913,-0.79,120
-3.695,1.02,120
-5.478,2.829,120
-7.26,4.639,120
-9.043,6.449,120
-10.825,8.258,120
-12.608,10.068,120
-14.39,11.877,120
-16.173,13.687,120
-17.955,15.496,120
-19.737,17.306,120
-21.52,19.115,120
-23.302,20.925,120
-25.085,22.734,120
-26.867,24.544,120
-28.65,26.353,120
-30.432,28.163,120
-32.215,29.973,120
-33.997,31.782,120
-35.78,33.592,120
-37.562,35.401,120
-39.345,37.211,120
-41.127,39.02,120
-42.909,40.83,120
-44.692,42.639,120
-46.474,44.449,120
-48.257,46.258,120
-50.039,48.068,120
-51.822,49.877,120
-53.604,51.687,120
-55.387,53.497,120
-57.169,55.306,120
-58.952,57.116,120
-60.734,58.925,120
-62.517,60.735,120
-64.299,62.544,120
-66.082,64.354,120
-67.864,66.163,120
-69.646,67.973,120
-71.429,69.782,120
-73.211,71.592,120
-74.994,73.401,120
-76.776,75.211,120
-78.559,77.021,120
-80.341,78.83,120
-82.124,80.64,120
-83.906,82.449,120
-85.689,84.259,120
-87.471,86.068,120
-89.254,87.878,120
-91.036,89.687,120
-92.818,91.497,120
-94.601,93.306,120
-96.383,95.116,120
-98.166,96.925,120
-99.948,98.735,120
-101.731,100.544,120
-103.513,102.354,120
-105.296,104.164,120
-107.078,105.973,120
-108.861,107.783,120
-110.643,109.592,120
-112.426,111.402,120
-114.208,113.211,120
-115.99,115.021,120
-117.773,116.83,120
-120.274,119.37,120,0
-120.274,119.37,0,0
'''

# Parsing the input data
lines = input_data.strip().split('\n')
path = []
for line in lines:
    parts = line.split(',')
    if len(parts) >= 2:
        x, y = float(parts[0]), float(parts[1])
        path.append((x, y))

# Function to calculate angle
def calculate_angle(p1, p2):
    dx = p2[0] - p1[0]
    dy = p2[1] - p1[1]
    return np.degrees(np.arctan2(dy, dx))

# Simplify path to isolate straights
def simplify_path(path, angle_tolerance=1):
    simplified_path = [path[0]]
    for i in range(1, len(path) - 1):
        angle1 = calculate_angle(path[i-1], path[i])
        angle2 = calculate_angle(path[i], path[i+1])
        if abs(angle1 - angle2) > angle_tolerance:
            simplified_path.append(path[i])
    simplified_path.append(path[-1])
    return simplified_path

# Simplify the path
simplified_path = simplify_path(path)

# Print the angles and distances
for i in range(1, len(simplified_path)):
    angle = calculate_angle(simplified_path[i-1], simplified_path[i])
    distance = np.linalg.norm(np.array(simplified_path[i]) - np.array(simplified_path[i-1]))
    print(f"{i}: {angle:.2f} {distance:.2f}")

# Plot the simplified path
plt.figure(figsize=(10, 8))
path_x, path_y = zip(*path)
simplified_x, simplified_y = zip(*simplified_path)
plt.plot(path_x, path_y, 'b-', label='Original Path')
plt.plot(simplified_x, simplified_y, 'g-', label='Simplified Path')
plt.scatter(simplified_x, simplified_y, color='red', s=50, label='Key Points')
plt.legend()
plt.grid(True)
plt.axis('equal')
plt.title('Simplified Robot Path Plot')
plt.show()
